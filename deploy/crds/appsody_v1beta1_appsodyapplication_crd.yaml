apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: appsodyapplications.appsody.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.applicationImage
    description: Absolute name of the deployed image containing registry and tag
    name: Image
    type: string
  - JSONPath: .spec.expose
    description: Specifies whether deployment is exposed externally via default Route
    name: Exposed
    type: boolean
  - JSONPath: .status.conditions[?(@.type=='Reconciled')].status
    description: Status of the reconcile condition
    name: Reconciled
    type: string
  - JSONPath: .status.conditions[?(@.type=='Reconciled')].reason
    description: Reason for the failure of reconcile condition
    name: Reason
    priority: 1
    type: string
  - JSONPath: .status.conditions[?(@.type=='Reconciled')].message
    description: Failure message from reconcile condition
    name: Message
    priority: 1
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: Age of the resource
    name: Age
    type: date
  group: appsody.dev
  names:
    kind: AppsodyApplication
    listKind: AppsodyApplicationList
    plural: appsodyapplications
    singular: appsodyapplication
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            applicationImage:
              type: string
            architecture:
              items:
                type: string
              type: array
            autoscaling:
              properties:
                maxReplicas:
                  format: int32
                  minimum: 1
                  type: integer
                minReplicas:
                  format: int32
                  type: integer
                targetCPUUtilizationPercentage:
                  format: int32
                  type: integer
              type: object
            buildConfig:
              properties:
                completionDeadlineSeconds:
                  description: completionDeadlineSeconds is an optional duration in
                    seconds, counted from the time when a build pod gets scheduled
                    in the system, that the build may be active on a node before the
                    system actively tries to terminate the build; value must be positive
                    integer
                  format: int64
                  type: integer
                failedBuildsHistoryLimit:
                  description: failedBuildsHistoryLimit is the number of old failed
                    builds to retain. If not specified, all failed builds are retained.
                  format: int32
                  type: integer
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: nodeSelector is a selector which must be true for the
                    build pod to fit on a node If nil, it can be overridden by default
                    build nodeselector values for the cluster. If set to an empty
                    map or a map with any values, default build nodeselector values
                    are ignored.
                  type: object
                output:
                  description: output describes the Docker image the Strategy should
                    produce.
                  properties:
                    imageLabels:
                      description: imageLabels define a list of labels that are applied
                        to the resulting image. If there are multiple labels with
                        the same name then the last one in the list is used.
                      items:
                        properties:
                          name:
                            description: name defines the name of the label. It must
                              have non-zero length.
                            type: string
                          value:
                            description: value defines the literal value of the label.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    pushSecret:
                      description: PushSecret is the name of a Secret that would be
                        used for setting up the authentication for executing the Docker
                        push to authentication enabled Docker Registry (or Docker
                        Hub).
                      type: object
                    to:
                      description: to defines an optional location to push the output
                        of this build to. Kind must be one of 'ImageStreamTag' or
                        'DockerImage'. This value will be used to look up a Docker
                        image repository to push to. In the case of an ImageStreamTag,
                        the ImageStreamTag will be looked for in the namespace of
                        the build unless Namespace is specified.
                      type: object
                  type: object
                postCommit:
                  description: postCommit is a build hook executed after the build
                    output image is committed, before it is pushed to a registry.
                  properties:
                    args:
                      description: args is a list of arguments that are provided to
                        either Command, Script or the Docker image's default entrypoint.
                        The arguments are placed immediately after the command to
                        be run.
                      items:
                        type: string
                      type: array
                    command:
                      description: command is the command to run. It may not be specified
                        with Script. This might be needed if the image doesn't have
                        `/bin/sh`, or if you do not want to use a shell. In all other
                        cases, using Script might be more convenient.
                      items:
                        type: string
                      type: array
                    script:
                      description: script is a shell script to be run with `/bin/sh
                        -ic`. It may not be specified with Command. Use Script when
                        a shell script is appropriate to execute the post build hook,
                        for example for running unit tests with `rake test`. If you
                        need control over the image entrypoint, or if the image does
                        not have `/bin/sh`, use Command and/or Args. The `-i` flag
                        is needed to support CentOS and RHEL images that use Software
                        Collections (SCL), in order to have the appropriate collections
                        enabled in the shell. E.g., in the Ruby image, this is necessary
                        to make `ruby`, `bundle` and other binaries available in the
                        PATH.
                      type: string
                  type: object
                resources:
                  description: resources computes resource requirements to execute
                    the build.
                  type: object
                revision:
                  description: revision is the information from the source for a specific
                    repo snapshot. This is optional.
                  properties:
                    git:
                      description: Git contains information about git-based build
                        source
                      properties:
                        author:
                          description: author is the author of a specific commit
                          properties:
                            email:
                              description: email of the source control user
                              type: string
                            name:
                              description: name of the source control user
                              type: string
                          type: object
                        commit:
                          description: commit is the commit hash identifying a specific
                            commit
                          type: string
                        committer:
                          description: committer is the committer of a specific commit
                          properties:
                            email:
                              description: email of the source control user
                              type: string
                            name:
                              description: name of the source control user
                              type: string
                          type: object
                        message:
                          description: message is the description of a specific commit
                          type: string
                      type: object
                    type:
                      description: type of the build source, may be one of 'Source',
                        'Dockerfile', 'Binary', or 'Images' +k8s:conversion-gen=false
                      type: string
                  required:
                  - type
                  type: object
                runPolicy:
                  description: RunPolicy describes how the new build created from
                    this build configuration will be scheduled for execution. This
                    is optional, if not specified we default to "Serial".
                  type: string
                serviceAccount:
                  description: serviceAccount is the name of the ServiceAccount to
                    use to run the pod created by this build. The pod will be allowed
                    to use secrets referenced by the ServiceAccount
                  type: string
                source:
                  description: source describes the SCM in use.
                  properties:
                    binary:
                      description: binary builds accept a binary as their input. The
                        binary is generally assumed to be a tar, gzipped tar, or zip
                        file depending on the strategy. For Docker builds, this is
                        the build context and an optional Dockerfile may be specified
                        to override any Dockerfile in the build context. For Source
                        builds, this is assumed to be an archive as described above.
                        For Source and Docker builds, if binary.asFile is set the
                        build will receive a directory with a single file. contextDir
                        may be used when an archive is provided. Custom builds will
                        receive this binary as input on STDIN.
                      properties:
                        asFile:
                          description: asFile indicates that the provided binary input
                            should be considered a single file within the build input.
                            For example, specifying "webapp.war" would place the provided
                            binary as `/webapp.war` for the builder. If left empty,
                            the Docker and Source build strategies assume this file
                            is a zip, tar, or tar.gz file and extract it as the source.
                            The custom strategy receives this binary as standard input.
                            This filename may not contain slashes or be '..' or '.'.
                          type: string
                      type: object
                    contextDir:
                      description: contextDir specifies the sub-directory where the
                        source code for the application exists. This allows to have
                        buildable sources in directory other than root of repository.
                      type: string
                    dockerfile:
                      description: dockerfile is the raw contents of a Dockerfile
                        which should be built. When this option is specified, the
                        FROM may be modified based on your strategy base image and
                        additional ENV stanzas from your strategy environment will
                        be added after the FROM, but before the rest of your Dockerfile
                        stanzas. The Dockerfile source type may be used with other
                        options like git - in those cases the Git repo will have any
                        innate Dockerfile replaced in the context dir.
                      type: string
                    git:
                      description: git contains optional information about git build
                        source
                      properties:
                        httpProxy:
                          description: httpProxy is a proxy used to reach the git
                            repository over http
                          type: string
                        httpsProxy:
                          description: httpsProxy is a proxy used to reach the git
                            repository over https
                          type: string
                        noProxy:
                          description: noProxy is the list of domains for which the
                            proxy should not be used
                          type: string
                        ref:
                          description: ref is the branch/tag/ref to build.
                          type: string
                        uri:
                          description: uri points to the source that will be built.
                            The structure of the source will depend on the type of
                            build to run
                          type: string
                      required:
                      - uri
                      type: object
                    images:
                      description: images describes a set of images to be used to
                        provide source for the build
                      items:
                        properties:
                          from:
                            description: from is a reference to an ImageStreamTag,
                              ImageStreamImage, or DockerImage to copy source from.
                            type: object
                          paths:
                            description: paths is a list of source and destination
                              paths to copy from the image.
                            items:
                              properties:
                                destinationDir:
                                  description: destinationDir is the relative directory
                                    within the build directory where files copied
                                    from the image are placed.
                                  type: string
                                sourcePath:
                                  description: sourcePath is the absolute path of
                                    the file or directory inside the image to copy
                                    to the build directory.  If the source path ends
                                    in /. then the content of the directory will be
                                    copied, but the directory itself will not be created
                                    at the destination.
                                  type: string
                              required:
                              - sourcePath
                              - destinationDir
                              type: object
                            type: array
                          pullSecret:
                            description: pullSecret is a reference to a secret to
                              be used to pull the image from a registry If the image
                              is pulled from the OpenShift registry, this field does
                              not need to be set.
                            type: object
                        required:
                        - from
                        - paths
                        type: object
                      type: array
                    secrets:
                      description: secrets represents a list of secrets and their
                        destinations that will be used only for the build.
                      items:
                        properties:
                          destinationDir:
                            description: destinationDir is the directory where the
                              files from the secret should be available for the build
                              time. For the Source build strategy, these will be injected
                              into a container where the assemble script runs. Later,
                              when the script finishes, all files injected will be
                              truncated to zero length. For the Docker build strategy,
                              these will be copied into the build directory, where
                              the Dockerfile is located, so users can ADD or COPY
                              them during docker build.
                            type: string
                          secret:
                            description: secret is a reference to an existing secret
                              that you want to use in your build.
                            type: object
                        required:
                        - secret
                        type: object
                      type: array
                    sourceSecret:
                      description: 'sourceSecret is the name of a Secret that would
                        be used for setting up the authentication for cloning private
                        repository. The secret contains valid credentials for remote
                        repository, where the data''s key represent the authentication
                        method to be used and value is the base64 encoded credentials.
                        Supported auth methods are: ssh-privatekey.'
                      type: object
                    type:
                      description: type of build input to accept +k8s:conversion-gen=false
                      type: string
                  required:
                  - type
                  type: object
                strategy:
                  description: strategy defines how to perform a build.
                  properties:
                    customStrategy:
                      description: customStrategy holds the parameters to the Custom
                        build strategy
                      properties:
                        buildAPIVersion:
                          description: buildAPIVersion is the requested API version
                            for the Build object serialized and passed to the custom
                            builder
                          type: string
                        env:
                          description: env contains additional environment variables
                            you want to pass into a builder container.
                          items:
                            type: object
                          type: array
                        exposeDockerSocket:
                          description: 'exposeDockerSocket will allow running Docker
                            commands (and build Docker images) from inside the Docker
                            container. TODO: Allow admins to enforce ''false'' for
                            this option'
                          type: boolean
                        forcePull:
                          description: forcePull describes if the controller should
                            configure the build pod to always pull the images for
                            the builder or only pull if it is not present locally
                          type: boolean
                        from:
                          description: from is reference to an DockerImage, ImageStreamTag,
                            or ImageStreamImage from which the docker image should
                            be pulled
                          type: object
                        pullSecret:
                          description: pullSecret is the name of a Secret that would
                            be used for setting up the authentication for pulling
                            the Docker images from the private Docker registries
                          type: object
                        secrets:
                          description: secrets is a list of additional secrets that
                            will be included in the build pod
                          items:
                            properties:
                              mountPath:
                                description: mountPath is the path at which to mount
                                  the secret
                                type: string
                              secretSource:
                                description: secretSource is a reference to the secret
                                type: object
                            required:
                            - secretSource
                            - mountPath
                            type: object
                          type: array
                      required:
                      - from
                      type: object
                    dockerStrategy:
                      description: dockerStrategy holds the parameters to the Docker
                        build strategy.
                      properties:
                        buildArgs:
                          description: buildArgs contains build arguments that will
                            be resolved in the Dockerfile.  See https://docs.docker.com/engine/reference/builder/#/arg
                            for more details.
                          items:
                            type: object
                          type: array
                        dockerfilePath:
                          description: dockerfilePath is the path of the Dockerfile
                            that will be used to build the Docker image, relative
                            to the root of the context (contextDir).
                          type: string
                        env:
                          description: env contains additional environment variables
                            you want to pass into a builder container.
                          items:
                            type: object
                          type: array
                        forcePull:
                          description: forcePull describes if the builder should pull
                            the images from registry prior to building.
                          type: boolean
                        from:
                          description: from is reference to an DockerImage, ImageStreamTag,
                            or ImageStreamImage from which the docker image should
                            be pulled the resulting image will be used in the FROM
                            line of the Dockerfile for this build.
                          type: object
                        imageOptimizationPolicy:
                          description: imageOptimizationPolicy describes what optimizations
                            the system can use when building images to reduce the
                            final size or time spent building the image. The default
                            policy is 'None' which means the final build image will
                            be equivalent to an image created by the Docker build
                            API. The experimental policy 'SkipLayers' will avoid commiting
                            new layers in between each image step, and will fail if
                            the Dockerfile cannot provide compatibility with the 'None'
                            policy. An additional experimental policy 'SkipLayersAndWarn'
                            is the same as 'SkipLayers' but simply warns if compatibility
                            cannot be preserved.
                          type: string
                        noCache:
                          description: noCache if set to true indicates that the docker
                            build must be executed with the --no-cache=true flag
                          type: boolean
                        pullSecret:
                          description: pullSecret is the name of a Secret that would
                            be used for setting up the authentication for pulling
                            the Docker images from the private Docker registries
                          type: object
                      type: object
                    jenkinsPipelineStrategy:
                      description: JenkinsPipelineStrategy holds the parameters to
                        the Jenkins Pipeline build strategy.
                      properties:
                        env:
                          description: env contains additional environment variables
                            you want to pass into a build pipeline.
                          items:
                            type: object
                          type: array
                        jenkinsfile:
                          description: Jenkinsfile defines the optional raw contents
                            of a Jenkinsfile which defines a Jenkins pipeline build.
                          type: string
                        jenkinsfilePath:
                          description: JenkinsfilePath is the optional path of the
                            Jenkinsfile that will be used to configure the pipeline
                            relative to the root of the context (contextDir). If both
                            JenkinsfilePath & Jenkinsfile are both not specified,
                            this defaults to Jenkinsfile in the root of the specified
                            contextDir.
                          type: string
                      type: object
                    sourceStrategy:
                      description: sourceStrategy holds the parameters to the Source
                        build strategy.
                      properties:
                        env:
                          description: env contains additional environment variables
                            you want to pass into a builder container.
                          items:
                            type: object
                          type: array
                        forcePull:
                          description: forcePull describes if the builder should pull
                            the images from registry prior to building.
                          type: boolean
                        from:
                          description: from is reference to an DockerImage, ImageStreamTag,
                            or ImageStreamImage from which the docker image should
                            be pulled
                          type: object
                        incremental:
                          description: incremental flag forces the Source build to
                            do incremental builds if true.
                          type: boolean
                        pullSecret:
                          description: pullSecret is the name of a Secret that would
                            be used for setting up the authentication for pulling
                            the Docker images from the private Docker registries
                          type: object
                        scripts:
                          description: scripts is the location of Source scripts
                          type: string
                      required:
                      - from
                      type: object
                    type:
                      description: type is the kind of build strategy. +k8s:conversion-gen=false
                      type: string
                  required:
                  - type
                  type: object
                successfulBuildsHistoryLimit:
                  description: successfulBuildsHistoryLimit is the number of old successful
                    builds to retain. If not specified, all successful builds are
                    retained.
                  format: int32
                  type: integer
                triggers:
                  description: triggers determine how new Builds can be launched from
                    a BuildConfig. If no triggers are defined, a new build can only
                    occur as a result of an explicit client build creation.
                  items:
                    properties:
                      bitbucket:
                        description: BitbucketWebHook contains the parameters for
                          a Bitbucket webhook type of trigger
                        properties:
                          allowEnv:
                            description: allowEnv determines whether the webhook can
                              set environment variables; can only be set to true for
                              GenericWebHook.
                            type: boolean
                          secret:
                            description: 'secret used to validate requests. Deprecated:
                              use SecretReference instead.'
                            type: string
                          secretReference:
                            description: secretReference is a reference to a secret
                              in the same namespace, containing the value to be validated
                              when the webhook is invoked. The secret being referenced
                              must contain a key named "WebHookSecretKey", the value
                              of which will be checked against the value supplied
                              in the webhook invocation.
                            properties:
                              name:
                                description: Name is the name of the resource in the
                                  same namespace being referenced
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      generic:
                        description: generic contains the parameters for a Generic
                          webhook type of trigger
                        properties:
                          allowEnv:
                            description: allowEnv determines whether the webhook can
                              set environment variables; can only be set to true for
                              GenericWebHook.
                            type: boolean
                          secret:
                            description: 'secret used to validate requests. Deprecated:
                              use SecretReference instead.'
                            type: string
                          secretReference:
                            description: secretReference is a reference to a secret
                              in the same namespace, containing the value to be validated
                              when the webhook is invoked. The secret being referenced
                              must contain a key named "WebHookSecretKey", the value
                              of which will be checked against the value supplied
                              in the webhook invocation.
                            properties:
                              name:
                                description: Name is the name of the resource in the
                                  same namespace being referenced
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      github:
                        description: github contains the parameters for a GitHub webhook
                          type of trigger
                        properties:
                          allowEnv:
                            description: allowEnv determines whether the webhook can
                              set environment variables; can only be set to true for
                              GenericWebHook.
                            type: boolean
                          secret:
                            description: 'secret used to validate requests. Deprecated:
                              use SecretReference instead.'
                            type: string
                          secretReference:
                            description: secretReference is a reference to a secret
                              in the same namespace, containing the value to be validated
                              when the webhook is invoked. The secret being referenced
                              must contain a key named "WebHookSecretKey", the value
                              of which will be checked against the value supplied
                              in the webhook invocation.
                            properties:
                              name:
                                description: Name is the name of the resource in the
                                  same namespace being referenced
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      gitlab:
                        description: GitLabWebHook contains the parameters for a GitLab
                          webhook type of trigger
                        properties:
                          allowEnv:
                            description: allowEnv determines whether the webhook can
                              set environment variables; can only be set to true for
                              GenericWebHook.
                            type: boolean
                          secret:
                            description: 'secret used to validate requests. Deprecated:
                              use SecretReference instead.'
                            type: string
                          secretReference:
                            description: secretReference is a reference to a secret
                              in the same namespace, containing the value to be validated
                              when the webhook is invoked. The secret being referenced
                              must contain a key named "WebHookSecretKey", the value
                              of which will be checked against the value supplied
                              in the webhook invocation.
                            properties:
                              name:
                                description: Name is the name of the resource in the
                                  same namespace being referenced
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      imageChange:
                        description: imageChange contains parameters for an ImageChange
                          type of trigger
                        properties:
                          from:
                            description: from is a reference to an ImageStreamTag
                              that will trigger a build when updated It is optional.
                              If no From is specified, the From image from the build
                              strategy will be used. Only one ImageChangeTrigger with
                              an empty From reference is allowed in a build configuration.
                            type: object
                          lastTriggeredImageID:
                            description: lastTriggeredImageID is used internally by
                              the ImageChangeController to save last used image ID
                              for build
                            type: string
                        type: object
                      type:
                        description: type is the type of build trigger
                        type: string
                    required:
                    - type
                    type: object
                  type: array
              required:
              - triggers
              - strategy
              - nodeSelector
              type: object
            createAppDefinition:
              type: boolean
            createKnativeService:
              type: boolean
            env:
              items:
                type: object
              type: array
            envFrom:
              items:
                type: object
              type: array
            expose:
              type: boolean
            livenessProbe:
              type: object
            monitoring:
              properties:
                endpoints:
                  items:
                    properties:
                      basicAuth:
                        description: 'BasicAuth allow an endpoint to authenticate
                          over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                        properties:
                          password:
                            description: The secret that contains the password for
                              authenticate
                            type: object
                          username:
                            description: The secret that contains the username for
                              authenticate
                            type: object
                        type: object
                      bearerTokenFile:
                        description: File to read bearer token for scraping targets.
                        type: string
                      honorLabels:
                        description: HonorLabels chooses the metric's labels on collisions
                          with target labels.
                        type: boolean
                      interval:
                        description: Interval at which metrics should be scraped
                        type: string
                      metricRelabelings:
                        description: MetricRelabelConfigs to apply to samples before
                          ingestion.
                        items:
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. defailt is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      params:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: Optional HTTP URL parameters
                        type: object
                      path:
                        description: HTTP path to scrape for metrics.
                        type: string
                      port:
                        description: Name of the service port this endpoint refers
                          to. Mutually exclusive with targetPort.
                        type: string
                      proxyUrl:
                        description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                          to proxy through this endpoint.
                        type: string
                      relabelings:
                        description: 'RelabelConfigs to apply to samples before ingestion.
                          More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        items:
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: Regular expression against which the extracted
                                value is matched. defailt is '(.*)'
                              type: string
                            replacement:
                              description: Replacement value against which a regex
                                replace is performed if the regular expression matches.
                                Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            sourceLabels:
                              description: The source labels select values from existing
                                labels. Their content is concatenated using the configured
                                separator and matched against the configured regular
                                expression for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            targetLabel:
                              description: Label to which the resulting value is written
                                in a replace action. It is mandatory for replace actions.
                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      scheme:
                        description: HTTP scheme to use for scraping.
                        type: string
                      scrapeTimeout:
                        description: Timeout after which the scrape is ended
                        type: string
                      targetPort:
                        anyOf:
                        - type: string
                        - type: integer
                        description: Name or number of the target port of the endpoint.
                          Mutually exclusive with port.
                      tlsConfig:
                        description: TLS configuration to use when scraping the endpoint
                        properties:
                          caFile:
                            description: The CA cert to use for the targets.
                            type: string
                          certFile:
                            description: The client cert file for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: The client key file for the targets.
                            type: string
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    type: object
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  type: object
              type: object
            pullPolicy:
              type: string
            pullSecret:
              type: string
            readinessProbe:
              type: object
            replicas:
              format: int32
              type: integer
            resourceConstraints:
              type: object
            service:
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                port:
                  format: int32
                  maximum: 65536
                  minimum: 1
                  type: integer
                type:
                  type: string
              type: object
            serviceAccountName:
              type: string
            stack:
              type: string
            storage:
              properties:
                mountPath:
                  type: string
                size:
                  pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                  type: string
                volumeClaimTemplate:
                  type: object
              type: object
            version:
              type: string
            volumeMounts:
              items:
                type: object
              type: array
            volumes:
              items:
                type: object
              type: array
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                type: object
              type: array
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
